//
// CdnDeliveryV3Origin.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

/** An &#x60;origin&#x60;, if present, is a choice of base URL or server from which to load a &#x60;variant&#x60;&#39;s content. If origin(s) exists in a group or variant, then one must be chosen in combination with the variant&#39;s &#x60;url&#x60;. */
public struct CdnDeliveryV3Origin: Content, Hashable {

    /** An absolute URL (possibly with trailing slash) which acts as the base of a delivery resource URI. This is always present. */
    public var url: String
    /** An absolute URL (possibly with trailing slash) which the client can use to query if the origin is active/working. This field may not be present. Perform an HTTP GET on this URL and expect an HTTP 200 in order to trust this origin. */
    public var queryUrl: String?
    public var datacenter: EdgeDataCenter?

    public init(url: String, queryUrl: String? = nil, datacenter: EdgeDataCenter? = nil) {
        self.url = url
        self.queryUrl = queryUrl
        self.datacenter = datacenter
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case queryUrl
        case datacenter
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(url, forKey: .url)
        try container.encodeIfPresent(queryUrl, forKey: .queryUrl)
        try container.encodeIfPresent(datacenter, forKey: .datacenter)
    }
}

