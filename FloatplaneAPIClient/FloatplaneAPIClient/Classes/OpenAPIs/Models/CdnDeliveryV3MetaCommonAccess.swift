//
// CdnDeliveryV3MetaCommonAccess.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

public struct CdnDeliveryV3MetaCommonAccess: Content, Hashable {

    public enum DeniedReason: String, Content, Hashable, CaseIterable {
        case ismissingpermission = "isMissingPermission"
        case isprocessing = "isProcessing"
        case isbroken = "isBroken"
    }
    /** - `isMissingPermission`: Indicates that the requester is lacking a required plan or other form of permission entitling on to access the corresponding resource. - `isProcessing`: Indicates that the corresponding resource is processing. Clients may choose to periodically refetch an asset's info when it has reported this state. - `isBroken`: Indicates that the corresponding resource is defective in some manner which has rendered it currently inaccessible. It is possible that the asset will be repaired at some later point in time. Clients may choose to periodically refetch an asset's info when it has reported this state. */
    public var deniedReason: DeniedReason?
    /** Message describing in human-readable terms why access has been witheld for a resource. */
    public var deniedMessage: String?

    public init(deniedReason: DeniedReason? = nil, deniedMessage: String? = nil) {
        self.deniedReason = deniedReason
        self.deniedMessage = deniedMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case deniedReason
        case deniedMessage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(deniedReason, forKey: .deniedReason)
        try container.encodeIfPresent(deniedMessage, forKey: .deniedMessage)
    }
}

