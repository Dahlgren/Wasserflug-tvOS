//
// ErrorModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

public struct ErrorModel: Content, Hashable {

    public var id: String
    public var errors: [ErrorModelErrorsInner]
    /** May be undefined. */
    public var message: String?

    public init(id: String, errors: [ErrorModelErrorsInner], message: String? = nil) {
        self.id = id
        self.errors = errors
        self.message = message
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case errors
        case message
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(errors, forKey: .errors)
        try container.encodeIfPresent(message, forKey: .message)
    }
}

